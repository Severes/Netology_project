# как читать из файла
#
# f = open("props.txt")
# print(f.read())
# print("=====")
# # после того, как мы поработали с файлом, его нужно закрывать
# print(f.closed)
# f.close()
# print(f.closed)


with open ("props.txt", encoding="utf-8") as f:
    for line in f:
        print(line)
        # конструкция для открытия и закрытия файла (менеджер контекста)
        # Как это понимать:
        # Данная конструкция "WITH AS" означает, что питон делает то, что написано после with и записывает это действие
        # в переменную, указанную после as. А дальше уже может следовать произвольный код, например,
        # цикл, как в нашем случае
        # фраза encoding="utf-8" помогает нам открыть файл в нужной кодировке. Без этого открылась бы краказябра
        print(f.closed)
        # на данном этапе файл еще открыт, так как мы проверяем его в самом выражении with


with open("props2.txt") as f2:
    print("=====")  # это просто разделитель, чтобы выводилось красивее
    print(f2.read())
    print("Внутри with выражения:")
    print(f2.closed)
    # в данном случае мы через with присвоили переменной f2 значение open("props2.txt"),
    # а затем прочитали f2 при помощи метода .read

print('После with выражения:')
print(f2.closed)
# print(f2.closed) возвращает значение true, что означает, что после выхода из выражения with
# файл автоматически закрывается
# print(f2.read())
# данный print вызовет ошибку ValueError: I/O operation on closed file. (I/O - Input/Output),
# потому что мы пытаемся прочитать закрытый файл

# мы можем читать файл и не полностью, а кусками (построчно)
# чтобы прочитать кусок (строку) файла, мы можем использовать метод .readline
with open("props3.txt") as f3:
    print("-----")
    print(f3.readline())
    print("-----")  # это просто разделитель, чтобы выводилось красивее
    print(f3.readline())
    # при этом питон запоминает, на какой строке мы остановились и каждый раз будет читать новую строку
    # пустая строка появляется потому, что в файле props3 в конце каждой строки стоит перенос строки
    # питон и его печатает вместе со строкой, но при помощи "END" мы можем ему сказть, чтобы он его не печатал
    print("-----")
    print(f3.readline(), end="")
    print("-----")
    # либо при помощи метода .strip
    print(f3.readline().strip())
    print("-----")
    # а если мы хотим просто прочитать файл до конца? Ок:
    for line in f3:
        print("Следующая строка:")
        print(line.strip())
